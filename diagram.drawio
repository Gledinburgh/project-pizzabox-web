<mxfile>
    <diagram id="rZdGreudldBPdvOHppnA" name="Page-1">
        <mxGraphModel dx="1733" dy="404" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="PizzaBox.Storing&lt;br&gt;&lt;br&gt;Unit Of Work: encapsulates access to Repositorys&lt;br&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;Stores : new StoresRepository()&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;Orders : new OrdersRepository()&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;Save() {&amp;nbsp; _context.saveChanges() }&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;span&gt;Repositories: encapsulates access to Database&lt;br&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;ul&gt;&lt;li&gt;Read() { return _context.Stores }&lt;/li&gt;&lt;li&gt;Create()&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="-40" y="10" width="380" height="320" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="PizzaBox.Client&lt;br&gt;&lt;br&gt;Controller: encapsulates Routing logic&lt;br&gt;&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;_unitOfWork: injected at design time&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;[Filters] : data annotations that constrict use&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;Actions: Take in models, and return Views&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;Create(OrderViewModel) { UnitOfWork.Orders.Insert(), UnitOfWork.Save }&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span&gt;Model: represents data for views. Assignes bindings with unit of work&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: left&quot;&gt;Crust : &amp;lt;List&amp;gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;Size: &amp;lt;List&amp;gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;Selected Crust: &amp;lt;Crust&amp;gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;Load(unitOfWork) { Crust = unitOfWork.Crusts&amp;nbsp; }&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="380" y="10" width="460" height="320" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="PizzaBox.Client&lt;br&gt;&lt;br&gt;Controller: encapsulates Routing logic&lt;br&gt;&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;_unitOfWork: injected at design time&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;[Filters] : data annotations that constrict use&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;Actions: Take in models, and return Views&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;&lt;span&gt;Create(OrderViewModel) { UnitOfWork.Orders.Insert(), UnitOfWork.Save }&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span&gt;Model: represents data for views. Assignes bindings with unit of work&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: left&quot;&gt;Crust : &amp;lt;List&amp;gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;Size: &amp;lt;List&amp;gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;Selected Crust: &amp;lt;Crust&amp;gt;&lt;/li&gt;&lt;li style=&quot;text-align: left&quot;&gt;Load(unitOfWork) { Crust = unitOfWork.Crusts&amp;nbsp; }&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;View: Accepts a model and returns HTML&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="-120" y="360" width="460" height="320" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>